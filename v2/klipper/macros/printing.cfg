   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    # Parameters
    {% set bed_temp = params.BED|default(0)|int %}
    {% set extruder_temp = params.EXTRUDER|default(0)|int %}
    {% set chamber_temp = params.CHAMBER|default(0)|int %}
    {% set bed_type = params.BED_TYPE|default("Smooth PEI") %}

    {% set config = printer["gcode_macro _Configuration"] %}

    SAVE_GCODE_STATE NAME=print_start_state

    {% if bed_temp < 20 %}
      M117 Requested bed temperature too low (requested {bed_temp}, minimum: 20)
      M112 # EStop!
    {% endif %}

    {% if extruder_temp < 20 %}
      M117 Requested extruder temperature too low (requested {extruder_temp}, minimum: 20)
      M112 # EStop!
    {% endif %}

    _configure_extruder

    # Start pre-heating the nozzle and bed while we perform
    M104 S{extruder_temp if extruder_temp < config.probe_temp else config.probe_temp}
    M140 S{bed_temp}
    M141 S{chamber_temp}

    _NOTIFY T="Homing"
    _ENSURE_HOMED

    # Clean the nozzle to ensure that we can conduct an accurate Z probe and bed mesh
    # We need to wait for the nozzle to come up to temperature before we can clean it
    _NOTIFY T="Heating for Cleaning"
    _STATUS_HEATING
    PARK_NOZZLE
    M109 S{extruder_temp}
    
    _NOTIFY T="Cleaning"
    CLEAN_NOZZLE LENGTH=0 # Clean the nozzle

    #######################
    #  Wait for Heating  #
    ######################
    _STATUS_HEATING
    _NOTIFY T="Bed Heating"
    M104 S{extruder_temp if extruder_temp < config.probe_temp else config.probe_temp} # Bring the nozzle to the probe temp for the final Z-probe
    M190 S{bed_temp} # Wait for bed to come up to temperature

    ############################################
    # Perform gantry levelling and bed meshing #
    ############################################
    _NOTIFY T="Meshing"
    _ENSURE_HOMED FORCE_Z=true
    QUAD_GANTRY_LEVEL
    _ENSURE_BED_MESH

    #####################
    # Heat the extruder #
    #####################
    _NOTIFY T="Heating"
    _STATUS_HEATING
    PARK_NOZZLE
    FILAMENT_SENSOR_ENABLE

    # Ensure that the nozzle and bed have reached their desired operating temperature
    M109 S{extruder_temp} # Wait for the nozzle to come up to temperature
    G90
    G92 E0

    # Now wait for the chamber to reach the desired operating temperature
    {% if chamber_temp > 0 %}
      M191 S{chamber_temp}
    {% endif %}

    _NOTIFY T="Priming"
    # Perform a 5mm purge and clean the nozzle before priming it and starting the print
    CLEAN_NOZZLE LENGTH=10
    VORON_PURGE
    # NOZZLE_PRIME BED={bed_temp} EXTRUDER={extruder_temp}

    _STATUS_READY
    RESTORE_GCODE_STATE NAME=print_start_state

    G90
    _NOTIFY T="Printing..."
    _STATUS_PRINTING
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    {% set config = printer["gcode_macro _Configuration"] %}

    _STATUS_BUSY
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder

    {% if printer.extruder.temperature >= 190 %}
    G1 E-{config.purge_retract} F{config.purge_speed * 10}      ; retract filament
    {% endif %}
    
    TURN_OFF_HEATERS
    FILAMENT_SENSOR_DISABLE

    PARK_NOZZLE FLOOR={printer.toolhead.position.z}
    
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _STATUS_READY
    _NOTIFY T="Print Complete"

    M141 S0 ; Disable the exhaust fan
    NEVERMORE_OFF_AFTER SECONDS=300 ; Turn off the nevermore after 5 minutes (if it's on)