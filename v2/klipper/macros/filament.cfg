[gcode_macro M600]
description: Enable the M600 "filament change" command by pausing the print
gcode:
    PAUSE

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set config = printer["gcode_macro _Configuration"] %}
    {% set extruder = printer["configfile"].settings.extruder %}
    {% set max_velocity = ((extruder.max_extrude_only_velocity or 30)  * 60) // 2 %}

    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0

    # fast-load (supports moving more than the max extrusion limit)
    {% set load_steps = (config.load_distance // extruder.max_extrude_only_distance)|int %}
    {% for i in range(load_steps) %}
        G1 E{extruder.max_extrude_only_distance} F{max_velocity - 1}
    {% endfor %}

    {% if config.load_distance % extruder.max_extrude_only_distance != 0 %}
        G1 E{config.load_distance % extruder.max_extrude_only_distance} F{max_velocity - 1}
    {% endif %}

    # mm/s flow rate based on filament diameter and desired flow rate in mm^3/s
    {% set purge_speed = config.purge_flowrate / (3.145 * (1.75/2)**2) %}
    G1 E{config.purge_length} F{purge_speed*60} # purge
    G10 # retract filament
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set config = printer["gcode_macro _Configuration"] %}
    {% set extruder = printer["configfile"].settings.extruder %}
    {% set max_velocity = ((extruder.max_extrude_only_velocity or 30) * 60) // 2 %}

    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    # mm/s flow rate based on filament diameter and desired flow rate in mm^3/s
    {% set purge_speed = config.purge_flowrate / (3.145 * (1.75/2)**2) %}
    G11 # un-retract filament
    G1 E{config.purge_length} F{purge_speed*60} # purge

    # fast-unload (supports moving more than the max extrusion limit)
    {% set unload_steps = (config.unload_distance // extruder.max_extrude_only_distance)|int %}
    {% for i in range(unload_steps) %}
        G1 E-{extruder.max_extrude_only_distance} F{max_velocity - 1}
    {% endfor %}

    {% if config.unload_distance % extruder.max_extrude_only_distance != 0 %}
        G1 E-{config.unload_distance % extruder.max_extrude_only_distance} F{max_velocity - 1}
    {% endif %}

    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro NOZZLE_PRIME]
gcode:
  {% set config = printer["gcode_macro _Configuration"] %}
  {% set extruder = printer["configfile"].settings.extruder %}

  {% set bed_temp = params.BED|default(0)|float %}
  {% set extruder_temp = params.EXTRUDER|default(0)|float %}
  {% set flow_rate = params.FLOW_RATE|default(config.prime_flow_rate)|float %}

  # ratio of the cross-sectional area of the nozzle to the filament
  {% set nozzle_ratio = (extruder.nozzle_diameter/2)**2 / (1.75/2)**2 %}
  # mm/s feed rate based on filament diameter and desired flow rate in mm^3/s
  {% set purge_speed = flow_rate / (3.145 * (1.75/2)**2) %}
  {% set slow_ratio = config.prime_slow_width / extruder.nozzle_diameter %}
  {% set fast_ratio = config.prime_fast_width / extruder.nozzle_diameter %}

  # If we want a line 2x as wide; we need to extrude 2x as much filament over the same distance
  # If we want to maintain the same flow rate while doing so, we need to move the nozzle half as fast
  # For a line one nozzle diameter in width, we need to extrude at purge_speed and move the nozzle 1mm for each "nozzle_ratio" of filament extruded
  # Since the feed rate controls the X movement, we need to adjust the feed rate based on the reciprocal of the nozzle_ratio - namely 1/nozzle_ratio
  
  {% if bed_temp != 0 and bed_temp < 20 %}
    _NOTIFY T="Requested bed temperature too low (requested {bed_temp}, minimum: 20)"
    M112 # EStop!
  {% endif %}

  {% if extruder_temp < config.purge_min_temp %}
    _NOTIFY T="Requested extruder temperature too low (requested {extruder_temp}, minimum: 20)"
    M112 # EStop!
  {% endif %}

  SAVE_GCODE_STATE NAME=nozzle_prime_state

  _ENSURE_HOMED

  _STATUS_HEATING
  M104 S{extruder_temp}
  M140 S{bed_temp}

  # Move to the priming location
  G90
  G1 Z{config.prime_prep_height} F720
  G1 X{config.prime_start} Y{config.prime_start} F{config.travel_speed}

  _STATUS_HEATING
  # Turn on the part cooling fan at partial power to reduce ooze adhering to the bed
  M106 S64

  # Wait for the nozzle and bed to come up to temperature
  M190 S{bed_temp}
  TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={extruder_temp} MAXIMUM={extruder_temp + 2}

  _STATUS_CLEANING
  # Move the nozzle to just above the print bed
  G1 Z{config.prime_height} F720

  G11 # un-retract filament

  # Turn on the part cooling fan to rapidly cool the purged filament
  # (helps reduce bed adhesion)
  M106 S255 

  # Start printing a priming line
  M83
  {% set x = config.prime_slow_distance %}
  G1 X{x} E{x * nozzle_ratio * slow_ratio} F{purge_speed / nozzle_ratio / slow_ratio * 60}

  {% set x = x + config.prime_fast_distance %}
  G1 X{x} E{x * nozzle_ratio * fast_ratio} F{purge_speed / nozzle_ratio / fast_ratio * 60}

  {% set x = x + config.prime_slow_distance %}
  G1 Z{config.prime_clearance} F720
  G1 X{x} F{config.travel_speed}

  M106 S0 # Turn off the part cooling fan

  RESTORE_GCODE_STATE NAME=nozzle_prime_state
  _STATUS_READY